{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alves\\\\Documents\\\\GitHub\\\\kinvo-front-end-test\\\\kinvo-teste\\\\src\\\\components\\\\botoesAcoes.jsx\";\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport botaoAcoes from \"./botaoAcoes\";\nimport { getDataFromUrl } from \"./functionsLibrary\";\n\nfunction getButtonNames() {\n  const data = JSON.parse(getDataFromUrl()).data.summary;\n  let dictfinal = {};\n\n  for (let d in data) {\n    let info = {};\n\n    switch (d) {\n      case \"grossBalance\":\n        info.nome = \"SALDO BRUTO\";\n        info.valor = data[d];\n        dictfinal.push(info);\n        break;\n\n      case \"appliedValue\":\n        info.nome = \"VALOR APLICADO\";\n        info.valor = data[d];\n        dictfinal.push(info);\n        break;\n\n      case \"capitalGains\":\n        info.nome = \"GANHO DE CAPITAL\";\n        info.valor = data[d];\n        dictfinal.push(info);\n        break;\n\n      case \"earnings\":\n        info.nome = \"TOTAL DISTRIBUÍDOS\";\n        info.valor = data[d];\n        dictfinal.push(info);\n        break;\n\n      case \"yield\":\n        info.nome = \"YIELD\";\n        info.valor = data[d];\n        dictfinal.push(info);\n        break;\n    }\n  }\n\n  return dictfinal;\n}\n\nconsole.log(getButtonNames());\nconst data2 = JSON.parse(getDataFromUrl()).data.summary;\n\nfor (let i = 0; i < data2.length; i++) {\n  console.log(data2[i].keys());\n}\n\nclass BotaoAcoes extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nomes: getButtonNames(),\n      dados: JSON.parse(getDataFromUrl()).data\n    };\n  }\n\n  render() {\n    return (\n      /* this.state.nomes.map(dado => (\r\n        <botaoAcoes nomeButton={this.state.nome[dado]} valor={} />*/\n      React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"hello\")\n    );\n  }\n\n}\n\nexport default BotaoAcoes;","map":{"version":3,"sources":["C:\\Users\\Alves\\Documents\\GitHub\\kinvo-front-end-test\\kinvo-teste\\src\\components\\botoesAcoes.jsx"],"names":["React","Component","styled","botaoAcoes","getDataFromUrl","getButtonNames","data","JSON","parse","summary","dictfinal","d","info","nome","valor","push","console","log","data2","i","length","keys","BotaoAcoes","state","nomes","dados","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,cAAT,QAA+B,oBAA/B;;AAEA,SAASC,cAAT,GAA0B;AACxB,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWJ,cAAc,EAAzB,EAA6BE,IAA7B,CAAkCG,OAA/C;AACA,MAAIC,SAAS,GAAG,EAAhB;;AAEA,OAAK,IAAIC,CAAT,IAAcL,IAAd,EAAoB;AAClB,QAAIM,IAAI,GAAG,EAAX;;AACA,YAAQD,CAAR;AACE,WAAK,cAAL;AACEC,QAAAA,IAAI,CAACC,IAAL,GAAY,aAAZ;AACAD,QAAAA,IAAI,CAACE,KAAL,GAAaR,IAAI,CAACK,CAAD,CAAjB;AACAD,QAAAA,SAAS,CAACK,IAAV,CAAeH,IAAf;AACA;;AACF,WAAK,cAAL;AACEA,QAAAA,IAAI,CAACC,IAAL,GAAY,gBAAZ;AACAD,QAAAA,IAAI,CAACE,KAAL,GAAaR,IAAI,CAACK,CAAD,CAAjB;AACAD,QAAAA,SAAS,CAACK,IAAV,CAAeH,IAAf;AACA;;AACF,WAAK,cAAL;AACEA,QAAAA,IAAI,CAACC,IAAL,GAAY,kBAAZ;AACAD,QAAAA,IAAI,CAACE,KAAL,GAAaR,IAAI,CAACK,CAAD,CAAjB;AACAD,QAAAA,SAAS,CAACK,IAAV,CAAeH,IAAf;AACA;;AACF,WAAK,UAAL;AACEA,QAAAA,IAAI,CAACC,IAAL,GAAY,oBAAZ;AACAD,QAAAA,IAAI,CAACE,KAAL,GAAaR,IAAI,CAACK,CAAD,CAAjB;AACAD,QAAAA,SAAS,CAACK,IAAV,CAAeH,IAAf;AACA;;AACF,WAAK,OAAL;AACEA,QAAAA,IAAI,CAACC,IAAL,GAAY,OAAZ;AACAD,QAAAA,IAAI,CAACE,KAAL,GAAaR,IAAI,CAACK,CAAD,CAAjB;AACAD,QAAAA,SAAS,CAACK,IAAV,CAAeH,IAAf;AACA;AAzBJ;AA2BD;;AACD,SAAOF,SAAP;AACD;;AAEDM,OAAO,CAACC,GAAR,CAAYZ,cAAc,EAA1B;AAEA,MAAMa,KAAK,GAAGX,IAAI,CAACC,KAAL,CAAWJ,cAAc,EAAzB,EAA6BE,IAA7B,CAAkCG,OAAhD;;AACA,KAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrCH,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAK,CAACC,CAAD,CAAL,CAASE,IAAT,EAAZ;AACD;;AAED,MAAMC,UAAN,SAAyBrB,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCsB,KADiC,GACzB;AAAEC,MAAAA,KAAK,EAAEnB,cAAc,EAAvB;AAA2BoB,MAAAA,KAAK,EAAElB,IAAI,CAACC,KAAL,CAAWJ,cAAc,EAAzB,EAA6BE;AAA/D,KADyB;AAAA;;AAGjCoB,EAAAA,MAAM,GAAG;AACP;AACE;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAKD;;AATgC;;AAYnC,eAAeJ,UAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport botaoAcoes from \"./botaoAcoes\";\r\nimport { getDataFromUrl } from \"./functionsLibrary\";\r\n\r\nfunction getButtonNames() {\r\n  const data = JSON.parse(getDataFromUrl()).data.summary;\r\n  let dictfinal = {};\r\n\r\n  for (let d in data) {\r\n    let info = {};\r\n    switch (d) {\r\n      case \"grossBalance\":\r\n        info.nome = \"SALDO BRUTO\";\r\n        info.valor = data[d];\r\n        dictfinal.push(info);\r\n        break;\r\n      case \"appliedValue\":\r\n        info.nome = \"VALOR APLICADO\";\r\n        info.valor = data[d];\r\n        dictfinal.push(info);\r\n        break;\r\n      case \"capitalGains\":\r\n        info.nome = \"GANHO DE CAPITAL\";\r\n        info.valor = data[d];\r\n        dictfinal.push(info);\r\n        break;\r\n      case \"earnings\":\r\n        info.nome = \"TOTAL DISTRIBUÍDOS\";\r\n        info.valor = data[d];\r\n        dictfinal.push(info);\r\n        break;\r\n      case \"yield\":\r\n        info.nome = \"YIELD\";\r\n        info.valor = data[d];\r\n        dictfinal.push(info);\r\n        break;\r\n    }\r\n  }\r\n  return dictfinal;\r\n}\r\n\r\nconsole.log(getButtonNames());\r\n\r\nconst data2 = JSON.parse(getDataFromUrl()).data.summary;\r\nfor (let i = 0; i < data2.length; i++) {\r\n  console.log(data2[i].keys());\r\n}\r\n\r\nclass BotaoAcoes extends Component {\r\n  state = { nomes: getButtonNames(), dados: JSON.parse(getDataFromUrl()).data };\r\n\r\n  render() {\r\n    return (\r\n      /* this.state.nomes.map(dado => (\r\n        <botaoAcoes nomeButton={this.state.nome[dado]} valor={} />*/\r\n      <h1>hello</h1>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BotaoAcoes;\r\n"]},"metadata":{},"sourceType":"module"}