{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Users\\\\Alves\\\\Documents\\\\GitHub\\\\kinvo-front-end-test\\\\kinvo-teste\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Users\\\\Alves\\\\Documents\\\\GitHub\\\\kinvo-front-end-test\\\\kinvo-teste\\\\src\\\\components\\\\fundosNavBar.jsx\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 18px;\\n  color: #707b81;\\n  font-family: \\\"helvetica-neue, arial\\\";\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport Assets from \"./assets\";\nimport styled from \"styled-components\"; // styled-components code\n\nexport const Hfundo = styled.h3(_templateObject()); // -----------------------------------------------------------------------------\n\nconst externUrl = \"https://ed87c2a9-bcc4-4e0c-8fd2-fefb9875b65b.mock.pstmn.io/getStockConsolidation\"; // Função para importar os dados da API\n\nfunction getDataFromUrl(dataurl) {\n  const httpreq = new XMLHttpRequest();\n  httpreq.open(\"GET\", dataurl, false);\n  httpreq.send(null);\n  return httpreq.responseText;\n} // Transforma os nomes em maíusculos e os ordena crescentemente\n\n\nfunction sortedUpperProducts() {\n  const data = JSON.parse(getDataFromUrl(externUrl));\n  const finalArray = [];\n  data.data.products.forEach(product => {\n    const nomeMaiusculo = product.productName.toUpperCase();\n    const splitNomeMaiusculo = nomeMaiusculo.split(\" \"); // product.productName = nomeMaiusculo.split(\"-\")[2];\n\n    product.productName = \"\";\n\n    for (let i = 1; i < splitNomeMaiusculo.length; i++) {\n      product.productName += splitNomeMaiusculo[i];\n    }\n\n    finalArray.push(product);\n  });\n\n  for (let i = 0; i < finalArray.length; i++) {\n    for (let j = 0; j < finalArray.length; j++) {\n      if (finalArray[i].productName < finalArray[j].productName) {\n        const nomeTemporario = finalArray[j].productName;\n        finalArray[j].productName = finalArray[i].productName;\n        finalArray[i].productName = nomeTemporario;\n      }\n    }\n  }\n\n  return finalArray;\n}\n\nclass FundosNavBar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      // Importando os dados da API para um objeto\n      products: sortedUpperProducts(),\n      search: \"\"\n    };\n\n    this.searchHandler = event => {\n      this.setState({\n        search: event.target.value\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Hfundo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Fundos\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.searchHandler,\n      value: this.state.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Assets, {\n      product: this.state.products,\n      searchFilter: this.state.search,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default FundosNavBar;","map":{"version":3,"sources":["C:\\Users\\Alves\\Documents\\GitHub\\kinvo-front-end-test\\kinvo-teste\\src\\components\\fundosNavBar.jsx"],"names":["React","Component","Assets","styled","Hfundo","h3","externUrl","getDataFromUrl","dataurl","httpreq","XMLHttpRequest","open","send","responseText","sortedUpperProducts","data","JSON","parse","finalArray","products","forEach","product","nomeMaiusculo","productName","toUpperCase","splitNomeMaiusculo","split","i","length","push","j","nomeTemporario","FundosNavBar","state","search","searchHandler","event","setState","target","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Assets from \"./assets\";\r\nimport styled from \"styled-components\";\r\n\r\n// styled-components code\r\nexport const Hfundo = styled.h3`\r\n  font-size: 18px;\r\n  color: #707b81;\r\n  font-family: \"helvetica-neue, arial\";\r\n`;\r\n\r\n// -----------------------------------------------------------------------------\r\n\r\nconst externUrl =\r\n  \"https://ed87c2a9-bcc4-4e0c-8fd2-fefb9875b65b.mock.pstmn.io/getStockConsolidation\";\r\n\r\n// Função para importar os dados da API\r\nfunction getDataFromUrl(dataurl) {\r\n  const httpreq = new XMLHttpRequest();\r\n  httpreq.open(\"GET\", dataurl, false);\r\n  httpreq.send(null);\r\n  return httpreq.responseText;\r\n}\r\n\r\n// Transforma os nomes em maíusculos e os ordena crescentemente\r\nfunction sortedUpperProducts() {\r\n  const data = JSON.parse(getDataFromUrl(externUrl));\r\n  const finalArray = [];\r\n\r\n  data.data.products.forEach(product => {\r\n    const nomeMaiusculo = product.productName.toUpperCase();\r\n    const splitNomeMaiusculo = nomeMaiusculo.split(\" \");\r\n    // product.productName = nomeMaiusculo.split(\"-\")[2];\r\n    product.productName = \"\";\r\n    for (let i = 1; i < splitNomeMaiusculo.length; i++) {\r\n      product.productName += splitNomeMaiusculo[i];\r\n    }\r\n    finalArray.push(product);\r\n  });\r\n\r\n  for (let i = 0; i < finalArray.length; i++) {\r\n    for (let j = 0; j < finalArray.length; j++) {\r\n      if (finalArray[i].productName < finalArray[j].productName) {\r\n        const nomeTemporario = finalArray[j].productName;\r\n        finalArray[j].productName = finalArray[i].productName;\r\n        finalArray[i].productName = nomeTemporario;\r\n      }\r\n    }\r\n  }\r\n\r\n  return finalArray;\r\n}\r\n\r\nclass FundosNavBar extends Component {\r\n  state = {\r\n    // Importando os dados da API para um objeto\r\n    products: sortedUpperProducts(),\r\n    search: \"\"\r\n  };\r\n\r\n  searchHandler = event => {\r\n    this.setState({ search: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div>\r\n          <Hfundo>Fundos</Hfundo>\r\n          <form>\r\n            <input\r\n              type=\"text\"\r\n              onChange={this.searchHandler}\r\n              value={this.state.search}\r\n            />\r\n          </form>\r\n        </div>\r\n        <div>\r\n          <Assets\r\n            product={this.state.products}\r\n            searchFilter={this.state.search}\r\n          />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FundosNavBar;\r\n"]},"metadata":{},"sourceType":"module"}